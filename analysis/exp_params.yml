
general:
  tasks: ['pRF','FA', 'flicker']
  color_categories: ['color_green', 'color_red']
  task_colors: {'color_red': ['orange', 'pink'], 
                  'color_green': ['yellow', 'blue']}

window: # refers to the parameters for the Psychopy Window class
  size: [1920, 1080] #[1680, 1050]
  display: 'square' # or 'rectangle', defines if square [vRes vRes] or rectangle [hRes vRes] display

monitor:
  name: default
  width: 69  # width of monitor (in cm)
  height: 39.3 #41 # height of monitor (in cm)
  distance: 194 #210 #194 #225  # distance of participant from monitor (in cm)

stimuli:
  gab_ratio: 0.66 #0.62 # ratio to multiply by gab diameter, to avoid empty spaces in grid
  element_size: 0.5 #1.1 #0.55 #0.4 #0.2 # degrees

  ori_shift_rate: 5 #'TR' #0.83 #.25 #5 # Hz, rate of element orientation change

  pos_jitter: 0.03 #0.06 #degrees, x,y position jiter to add to gabor center 

FA:
  bar_width_ratio: 0.125 # ratio of the screen res
  mini_blocks: 4

  empty_TR: 20 # number of TRs during empty period
  task_trial_TR: 2 # number of TRs per trial of actual task

  total_number_trials: 132 #408  
  total_number_TR: 309 #408 # of task

  crop: True # if we want to crop the functionals further
  crop_TR: 5 # number of functionals to crop

  regress_confounds: False # if we want to regress out fmriprep confounds

  baseline_ind_inter1: 19 # start of task baseline interval to use in detrending
  baseline_ind_inter2: -15 # end of task baseline interval to use in detrending

  standardize: 'psc'

  sync_scanner: False

  task_rate: 'TR' # seconds or 'TR' if synced to TR

  bars_phase_dur: 0.5 # phase duration for displaying bars (in seconds) 

  num_bars: 2
  num_bar_position: [6,6] #[8,8]

  conditions: ['color_red', 'color_green'] # all conditions to be attended during feature trial

  bar_pass_direction: ['empty', 'task', 'empty']

pRF:
  bar_width_ratio: 0.125 #0.0625 # ratio of the screen res

  num_TRs:
    empty_long: 20
    empty: 12
    L-R: 17
    R-L: 17
    U-D: 17
    D-U: 17

  total_number_TR: 220 # of task

  crop: True # if we want to crop the functionals further
  crop_TR: 5 # number of functionals to crop

  regress_confounds: False # if we want to regress out fmriprep confounds

  baseline_ind_inter1: 19 # start of task baseline interval to use in detrending
  baseline_ind_inter2: -15 # end of task baseline interval to use in detrending

  standardize: 'psc'

  flick_rate: 8 # Hz, frequency of flickering
  flick_stim_rate: 'TR' # 'freq' # rate of change of features in bar 
  flick_on_off: True # if flickering is stim-on/off screen, or if just flickering with stim-on 

  element_contrast: 1 # do full contrast during prf task

  task_on_main_categories: False # if false, then task uses color variants

  bar_pass_direction: ['empty_long','L-R','U-D','empty','R-L','D-U','empty_long','D-U','R-L','empty','U-D','L-R','empty_long'] 

  sync_scanner: True

  task_rate: 'TR' # 1 # seconds or 'TR' if synced to TR 

flicker:
  bar_width_ratio: 0.125 # ratio of the screen res

  num_rep_ecc: 4 #12

  ref_color: 'pink' # reference color is less luminance one - so red + blue

  bar_ecc_index: [0,1,2] #[3,3,1,2,2,1,1,2,1,2] # eccentricity index for bar positions: 0 - furthest ecc; 3 - closest ecc

  flick_rate: 15 #30 #15 # Hz, flicker rate of color for square

  max_trial_time: 5 # max trial time (in minutes)

  backgr_contrast: 0 # contrast for elements, 0 = no background elements shown
  increment: 0.025 # increment value for luminance per button press


mri: # refers to the Psychopy SyncGenerator class
  TR: 1.6  # seconds between volume acquisitions
  sync: 't'  # character used as flag for sync timing

  dummy_TR: 5 # we used extra 5 TRs in beginning that should be disregarded

  space: 'fsLR_den-170k' #'fsaverage' # space of the files to be used in analysis

  file_ext:  {'fsLR_den-170k': '_bold.dtseries.nii', 
              'fsaverage': '_bold.func.gii'} # file extension

  acq: 'nordic' #'nordic' #'standard' # "acquisition" type to use

  nr_runs: 4 # number of runs per task

  fmriprep_sing: 'fmriprep.20.2.7.simg' #'fmriprep.21.0.2.simg' # fmriprep singularity image name
  mriqc_sing: 'mriqc-0.15.1.simg' # mriqc singularity image name

  save_subcortical: False # saving subcortical surface data

  slicetimecorrection: True

  shift_DM_TRs: -1 # accounts for dynamic trigger sent on last dummy

  confounds:
    file_ext: '_desc-confounds_timeseries.tsv' # file extension for confounds
    regs: ['a_comp_cor','cosine','framewise_displacement']
    CumulativeVarianceExplained: 0.4 # percentage of cumulative variance explained of components, to choose number of a_comp_cor

  preproc:
    BFC_T2: True
  
  filtering:
    type: 
      pRF: 'dc' #'HPgauss' # None
      FA: 'LinDetrend'
    cut_off_hz: 0.01 # cut off frequency to filter
    first_modes_to_remove: 5 # Number of low-frequency eigenmodes to remove (highpass)

    window_length: 201
    polyorder: 3
    highpass: True
    add_mean: True

  paths:
    local: 
      root: '/Volumes/Verissimo_Seagate_Hub_Plus/Projects/FAM/DATA'
      matlab: '/Applications/MATLAB_R2019a.app/bin/matlab'
      derivatives: '/Volumes/Verissimo_Seagate_Hub_Plus/Projects/FAM/DATA/derivatives'
      sourcedata: '/Volumes/Verissimo_Seagate_Hub_Plus/Projects/FAM/DATA/sourcedata'
      singularity: ''
    
    lisa:
      root: '/project/projects_verissimo/FAM/DATA'
      matlab: ''
      derivatives: '/scratch/derivatives'
      sourcedata: '/scratch/sourcedata'
      singularity: '/home/inesv/my_images'
      
    behav_lab:
      root: '/home/verissimo/Experiments/FAM/feature_attention_mapping/output'

  fitting:
    pRF:
      run: 'mean' 
      total_chunks: {'fsaverage': 83, 'T1w': 89, 'fsLR_den-170k': 54} # total number of chunks to split the data, depends on space of files

      fit_folder: 'pRF_fit'

      fit_model: 'css' #'dn' #'gauss' #'css'

      optimizer: 'L-BFGS-B'

      estimate_keys: {'gauss': ['x','y','size','betas','baseline','r2'],
                      'css': ['x','y','size','betas','baseline','ns', 'r2'],
                      'dn': ['x','y','size','betas','baseline', 'sa', 'ss', 'nb', 'sb', 'r2'],
                      'dog': ['x','y','size','betas','baseline', 'sa', 'ss', 'r2'],
                      'hrf': ['hrf_derivative', 'hrf_dispersion']} # to keep track of variables throughout scripts

      fit_hrf: True #False #True
      fix_bold_baseline: True
      correct_baseline: True
      num_baseline_TRs: 8

      grid_nr: 40 # number of grid steps
      min_eccen: 0.2
      max_eccen: 10

      min_size: 0.2
      max_size: 15

      min_n: 0.05
      max_n: 1
      n_nr: 20

      N_PROCS: 4

    FA:
      fit_model: 'gain'

      fit_folder: {'gain': 'FA_Gain_fit', 
                    'glm': 'FA_GLM_fit', 
                    'full_stim': 'FA_FullStim_fit'} # folders to store fits

      optimizer: 'L-BFGS-B' #'lbfgsb' #'trust-constr'

      fix_bold_baseline: True
      correct_baseline: True
      num_baseline_TRs: 8

      total_chunks: {'fsaverage': 83, 'T1w': 89, 'fsLR_den-170k': 54} # total number of chunks to split the data, depends on space of files

      prf_rsq_threshold: 0.35 # .8 

      glm_regs: ['full_stim'] #['att_bar', 'unatt_bar', 'full_stim'] # regressor names for GLM fitting

    
eyetracking:

  HP_pupil_f: 0.01
  LP_pupil_f: 6.0
  sampling_freq: 1000

  downsampling: 10 # downsampling rate

  sacc_thresh : 6 # 5 # lambda, median-based standard deviations from the median estimator
  minimum_saccade_duration: 0.006 # 0.016 # minimum duration to consider saccade (ms)

  tasks: ['FA'] # task names with eyetracking data to analyse

keys: # keys to press, valid for laptop, scanner and behav lab
  right_index: ['right','b', 2, '2','num_2']
  left_index: ['left','e', 1, '1','num_1']
  flicker_continue: ['space','r', '4', 4, 'num_4']
  
  task_key_name:
    pRF: {'left_index': ['color_red'], 'right_index': ['color_green']}
    FA: {'left_index': ['pink', 'blue'], 'right_index': ['orange', 'yellow']}
  

plotting:
  # define costum palette
  cond_colors : 
    color_red: [0.61960784, 0.00784314, 0.00784314]
    color_green: [0.00784314, 0.61960784, 0.03921569]
    pink: [0.61960784, 0.00784314, 0.29411765]
    orange: [0.61960784, 0.24313725, 0.00784314]
    blue: [0.00784314, 0.61960784, 0.44705882]
    yellow: [0.52941176, 0.61960784, 0.00784314]


  pycortex_sub: 'hcp_999999' #'fsaverage'
  use_sub_rois: False #True

  ROI_pal: 
    V1: [0.03137255, 0.11372549, 0.34509804]
    V2: [0.14136101, 0.25623991, 0.60530565]
    V3: [0.12026144, 0.50196078, 0.72156863]
    V3AB: [0.25871588, 0.71514033, 0.76807382]
    hV4: [0.59215686, 0.84052288, 0.72418301]
    V4: [0.59215686, 0.84052288, 0.72418301]
    LO: [0.88207612, 0.9538639 , 0.69785467]
    TO: [0.99764706, 0.88235294, 0.52862745]
    MT+: [0.99764706, 0.88235294, 0.52862745]
    VO: [0.99529412, 0.66901961, 0.2854902]
    IPS: [0.83058824, 0.06117647, 0.1254902] 
    IPS0: [0.99764706, 0.88235294, 0.52862745]
    IPS1: [0.99529412, 0.66901961, 0.2854902] 
    IPS2+: [0.83058824, 0.06117647, 0.1254902]
    sPCS: [0.88221453, 0.83252595, 0.91109573]
    iPCS: [0.87320261, 0.13071895, 0.47320261]
  
  ROIs: {'fsaverage': ['V1','V2','V3','V3AB','hV4','LO','IPS0','IPS1','IPS2+','sPCS','iPCS'], 
        'fsLR_den-170k': ['V1', 'V2', 'V3', 'hV4', 'LO', 'V3AB'], #['V1','V2','V3','hV4','VO','LO','V3AB','IPS0','MT+'], # #, 'IPS0'], #['V1', 'V2', 'V3', 'hV4', 'VO', 'LO', 'V3AB', 'IPS', 'MT+','sPCS','iPCS'],
        'glasser_atlas':{'V1': {'ROI': ['L_V1', 'R_V1'], 'color': [0.03137255, 0.11372549, 0.34509804]},
                          'V2': {'ROI': ['L_V2', 'R_V2'], 'color': [0.14136101, 0.25623991, 0.60530565]},
                          'V3': {'ROI': ['L_V3', 'R_V3'], 'color': [0.12026144, 0.50196078, 0.72156863]},
                          'V3AB': {'ROI': ['L_V3A', 'L_V3B', 'R_V3A', 'R_V3B'], 'color': [0.25871588, 0.71514033, 0.76807382]},
                          'V4': {'ROI': ['L_V4', 'R_V4'], 'color': [0.59215686, 0.84052288, 0.72418301]},
                          'LO': {'ROI': ['L_LO1', 'L_LO2', 'L_LO3', 'R_LO1', 'R_LO2', 'R_LO3'], 'color': [0.88207612, 0.9538639 , 0.69785467]}, 
                          'IPS0': {'ROI': ['L_V7', 'R_V7'], 'color': [0.99764706, 0.88235294, 0.52862745]}, 
                          'IPS1': {'ROI': ['L_IPS1', 'R_IPS1'], 'color': [0.99529412, 0.66901961, 0.2854902]}}
                          }

  rsq_threshold: .25 #.15 #.25 




